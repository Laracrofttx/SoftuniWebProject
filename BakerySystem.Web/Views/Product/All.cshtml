@model ProductSearchQueryModel

@using static BakerySystem.Web.Infrastructure.Extensions.ClaimsPrincipalExtension;

@{
	ViewData["Title"] = "All " + Model.CategoryName;
}

<form method="get">
	<div class="row mb-5">
		<div class="form-group col-md-3 mt-3">
			<label asp-for="SearchByName"></label>
			<input asp-for="SearchByName" class="form-control" placeholder="Product name">
		</div>
		<div class="form-group col-md-3">
			<input type="submit" class="btn btn-primary d-none" value="Search">
		</div>
	</div>
</form>

@if (Model.Products != null)
{
	<div class="row gy-3">

		@foreach (var product in Model.Products)
		{
			<div class="col-sm-6 col-md-6 col-lg-4 col-xl-3">
				<div class="card mb-3 h-100 bg-transparent">
					<img class="card-img-top" style="height: 250px; width: 100%;"
						 src="@product.ImageUrl">
					<div class="card-body bg-opacity-10 border-0">
						<h5 class="card-title">@product.Name - @product.Price$</h5>
						<form method="post" asp-controller="Cart" asp-action="AddToCart" asp-route-id="@product.Id">
							<button type="submit" class="btn btn-primary float-end">
								Add To Cart
							</button>
						</form>
						<a asp-area="" asp-controller="Product" asp-action="Details" asp-route-id="@product.Id"
						   class="btn btn-success">Details</a>

						@if (this.User.IsAdmin())
						{
							<a asp-area="" asp-controller="Product" asp-action="Edit" asp-route-id="@product.Id"
							   class="btn btn-warning">Edit</a>
							<a asp-area="" asp-controller="Product" asp-action="Delete" asp-route-id="@product.Id"
							   class="btn btn-danger">Delete</a>
						}
					</div>
				</div>
			</div>
		}
	</div>
}

@{
	int previousPage = Model.CurrentPage - 1;

	if (previousPage < 1)
	{
		previousPage = 1;
	}
	int maxPage = (int)Math.Ceiling((double)Model.TotalProducts / ProductSearchQueryModel.ProductsPerPage);
}

<div class="row">
	<div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-start mt-5">
		<a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
		   asp-controller="Product"
		   asp-action="All"
		   asp-route-currentPage="@previousPage"
		   asp-route-category="@Model.CategoryName"
		   asp-route-searchTerm="@Model.SearchByName"><<</a>
	</div>

	@{
		bool shouldNextPageBeDisabled = Model.CurrentPage == maxPage ||
		!Model.Products!.Any();
	}

	<div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-end mt-5">
		<a class="btn btn-primary @(shouldNextPageBeDisabled ? "disabled" : string.Empty)"
		   asp-controller="Product"
		   asp-action="All"
		   asp-route-currentPage="@(Model.CurrentPage + 1)"
		   asp-route-category="@Model.CategoryName"
		   asp-route-searchTerm="@Model.SearchByName">>></a>
	</div>

	@if (!Model.Products!.Any())
	{
		<div class="container">
			<div class="row">
				<div class="col text-center">
					<h1>We are currently working on</h1>
					<h1 class="text-warning">adding more products!</h1>
				</div>
			</div>
		</div>
	}
</div>

@if (Model.TotalProducts == maxPage)
{
	<h2 class="text-center">No products by the given name!</h2>
}
